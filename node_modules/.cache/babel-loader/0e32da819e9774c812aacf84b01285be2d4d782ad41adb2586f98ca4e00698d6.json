{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ben\\\\VSCode\\\\Parm\\\\src\\\\contexts\\\\KPIContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { kpiData } from '../data/kpiData';\nimport { applyRelationships } from '../utils/relationships';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  categories: kpiData,\n  isLoading: false\n};\nfunction kpiReducer(state, action) {\n  switch (action.type) {\n    case 'UPDATE_METRIC':\n      {\n        const {\n          categoryId,\n          subcategoryId,\n          metricId,\n          value\n        } = action;\n        const updatedCategories = state.categories.map(category => {\n          if (category.id !== categoryId) return category;\n          return {\n            ...category,\n            subcategories: category.subcategories.map(subcategory => {\n              if (subcategory.id !== subcategoryId) return subcategory;\n              return {\n                ...subcategory,\n                metrics: subcategory.metrics.map(metric => {\n                  if (metric.id !== metricId) return metric;\n                  return {\n                    ...metric,\n                    value\n                  };\n                })\n              };\n            })\n          };\n        });\n\n        // Apply relationship rules\n        const categoriesWithRelationships = applyRelationships(updatedCategories, categoryId, subcategoryId, metricId, value);\n        return {\n          ...state,\n          categories: categoriesWithRelationships\n        };\n      }\n    case 'LOAD_DATA':\n      return {\n        ...state,\n        categories: action.data\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.loading\n      };\n    default:\n      return state;\n  }\n}\nconst KPIContext = /*#__PURE__*/createContext(undefined);\nexport function KPIContextProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(kpiReducer, initialState);\n  const updateMetric = (categoryId, subcategoryId, metricId, value) => {\n    dispatch({\n      type: 'UPDATE_METRIC',\n      categoryId,\n      subcategoryId,\n      metricId,\n      value\n    });\n  };\n  const exportData = () => {\n    return JSON.stringify(state.categories, null, 2);\n  };\n  const importData = data => {\n    try {\n      const parsedData = JSON.parse(data);\n      dispatch({\n        type: 'LOAD_DATA',\n        data: parsedData\n      });\n    } catch (error) {\n      console.error('Failed to import data:', error);\n    }\n  };\n  const value = {\n    state,\n    dispatch,\n    updateMetric,\n    exportData,\n    importData\n  };\n  return /*#__PURE__*/_jsxDEV(KPIContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(KPIContextProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = KPIContextProvider;\nexport function useKPI() {\n  _s2();\n  const context = useContext(KPIContext);\n  if (context === undefined) {\n    throw new Error('useKPI must be used within a KPIContextProvider');\n  }\n  return context;\n}\n_s2(useKPI, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"KPIContextProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","kpiData","applyRelationships","jsxDEV","_jsxDEV","initialState","categories","isLoading","kpiReducer","state","action","type","categoryId","subcategoryId","metricId","value","updatedCategories","map","category","id","subcategories","subcategory","metrics","metric","categoriesWithRelationships","data","loading","KPIContext","undefined","KPIContextProvider","children","_s","dispatch","updateMetric","exportData","JSON","stringify","importData","parsedData","parse","error","console","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useKPI","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Ben/VSCode/Parm/src/contexts/KPIContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from 'react';\r\nimport { kpiData } from '../data/kpiData';\r\nimport { applyRelationships } from '../utils/relationships';\r\n\r\nexport interface Metric {\r\n  id: string;\r\n  name: string;\r\n  value: number;\r\n  description?: string;\r\n}\r\n\r\nexport interface Subcategory {\r\n  id: string;\r\n  name: string;\r\n  metrics: Metric[];\r\n}\r\n\r\nexport interface KPICategory {\r\n  id: string;\r\n  name: string;\r\n  subcategories: Subcategory[];\r\n}\r\n\r\ninterface KPIState {\r\n  categories: KPICategory[];\r\n  isLoading: boolean;\r\n}\r\n\r\ntype KPIAction =\r\n  | { type: 'UPDATE_METRIC'; categoryId: string; subcategoryId: string; metricId: string; value: number }\r\n  | { type: 'LOAD_DATA'; data: KPICategory[] }\r\n  | { type: 'SET_LOADING'; loading: boolean };\r\n\r\nconst initialState: KPIState = {\r\n  categories: kpiData,\r\n  isLoading: false,\r\n};\r\n\r\nfunction kpiReducer(state: KPIState, action: KPIAction): KPIState {\r\n  switch (action.type) {\r\n    case 'UPDATE_METRIC': {\r\n      const { categoryId, subcategoryId, metricId, value } = action;\r\n      \r\n      const updatedCategories = state.categories.map(category => {\r\n        if (category.id !== categoryId) return category;\r\n        \r\n        return {\r\n          ...category,\r\n          subcategories: category.subcategories.map(subcategory => {\r\n            if (subcategory.id !== subcategoryId) return subcategory;\r\n            \r\n            return {\r\n              ...subcategory,\r\n              metrics: subcategory.metrics.map(metric => {\r\n                if (metric.id !== metricId) return metric;\r\n                return { ...metric, value };\r\n              })\r\n            };\r\n          })\r\n        };\r\n      });\r\n\r\n      // Apply relationship rules\r\n      const categoriesWithRelationships = applyRelationships(updatedCategories, categoryId, subcategoryId, metricId, value);\r\n      \r\n      return {\r\n        ...state,\r\n        categories: categoriesWithRelationships,\r\n      };\r\n    }\r\n    \r\n    case 'LOAD_DATA':\r\n      return {\r\n        ...state,\r\n        categories: action.data,\r\n      };\r\n      \r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        isLoading: action.loading,\r\n      };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ninterface KPIContextType {\r\n  state: KPIState;\r\n  dispatch: React.Dispatch<KPIAction>;\r\n  updateMetric: (categoryId: string, subcategoryId: string, metricId: string, value: number) => void;\r\n  exportData: () => string;\r\n  importData: (data: string) => void;\r\n}\r\n\r\nconst KPIContext = createContext<KPIContextType | undefined>(undefined);\r\n\r\nexport function KPIContextProvider({ children }: { children: ReactNode }) {\r\n  const [state, dispatch] = useReducer(kpiReducer, initialState);\r\n\r\n  const updateMetric = (categoryId: string, subcategoryId: string, metricId: string, value: number) => {\r\n    dispatch({\r\n      type: 'UPDATE_METRIC',\r\n      categoryId,\r\n      subcategoryId,\r\n      metricId,\r\n      value,\r\n    });\r\n  };\r\n\r\n  const exportData = (): string => {\r\n    return JSON.stringify(state.categories, null, 2);\r\n  };\r\n\r\n  const importData = (data: string) => {\r\n    try {\r\n      const parsedData = JSON.parse(data);\r\n      dispatch({ type: 'LOAD_DATA', data: parsedData });\r\n    } catch (error) {\r\n      console.error('Failed to import data:', error);\r\n    }\r\n  };\r\n\r\n  const value: KPIContextType = {\r\n    state,\r\n    dispatch,\r\n    updateMetric,\r\n    exportData,\r\n    importData,\r\n  };\r\n\r\n  return (\r\n    <KPIContext.Provider value={value}>\r\n      {children}\r\n    </KPIContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useKPI() {\r\n  const context = useContext(KPIContext);\r\n  if (context === undefined) {\r\n    throw new Error('useKPI must be used within a KPIContextProvider');\r\n  }\r\n  return context;\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}