{"ast":null,"code":"import _objectSpread from\"C:/Users/Ben/VSCode/Parm/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer}from'react';import{kpiData}from'../data/kpiData';import{applyRelationships}from'../utils/relationships';import{jsx as _jsx}from\"react/jsx-runtime\";const initialState={categories:kpiData,isLoading:false};function kpiReducer(state,action){switch(action.type){case'UPDATE_METRIC':{const{categoryId,subcategoryId,metricId,value}=action;const updatedCategories=state.categories.map(category=>{if(category.id!==categoryId)return category;return _objectSpread(_objectSpread({},category),{},{subcategories:category.subcategories.map(subcategory=>{if(subcategory.id!==subcategoryId)return subcategory;return _objectSpread(_objectSpread({},subcategory),{},{metrics:subcategory.metrics.map(metric=>{if(metric.id!==metricId)return metric;return _objectSpread(_objectSpread({},metric),{},{value});})});})});});// Apply relationship rules\nconst categoriesWithRelationships=applyRelationships(updatedCategories,categoryId,subcategoryId,metricId,value);return _objectSpread(_objectSpread({},state),{},{categories:categoriesWithRelationships});}case'LOAD_DATA':return _objectSpread(_objectSpread({},state),{},{categories:action.data});case'SET_LOADING':return _objectSpread(_objectSpread({},state),{},{isLoading:action.loading});default:return state;}}const KPIContext=/*#__PURE__*/createContext(undefined);export function KPIContextProvider(_ref){let{children}=_ref;const[state,dispatch]=useReducer(kpiReducer,initialState);const updateMetric=(categoryId,subcategoryId,metricId,value)=>{dispatch({type:'UPDATE_METRIC',categoryId,subcategoryId,metricId,value});};const exportData=()=>{return JSON.stringify(state.categories,null,2);};const importData=data=>{try{const parsedData=JSON.parse(data);dispatch({type:'LOAD_DATA',data:parsedData});}catch(error){console.error('Failed to import data:',error);}};const value={state,dispatch,updateMetric,exportData,importData};return/*#__PURE__*/_jsx(KPIContext.Provider,{value:value,children:children});}export function useKPI(){const context=useContext(KPIContext);if(context===undefined){throw new Error('useKPI must be used within a KPIContextProvider');}return context;}","map":{"version":3,"names":["React","createContext","useContext","useReducer","kpiData","applyRelationships","jsx","_jsx","initialState","categories","isLoading","kpiReducer","state","action","type","categoryId","subcategoryId","metricId","value","updatedCategories","map","category","id","_objectSpread","subcategories","subcategory","metrics","metric","categoriesWithRelationships","data","loading","KPIContext","undefined","KPIContextProvider","_ref","children","dispatch","updateMetric","exportData","JSON","stringify","importData","parsedData","parse","error","console","Provider","useKPI","context","Error"],"sources":["C:/Users/Ben/VSCode/Parm/src/contexts/KPIContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from 'react';\r\nimport { kpiData } from '../data/kpiData';\r\nimport { applyRelationships } from '../utils/relationships';\r\n\r\nexport interface Metric {\r\n  id: string;\r\n  name: string;\r\n  value: number;\r\n  description?: string;\r\n}\r\n\r\nexport interface Subcategory {\r\n  id: string;\r\n  name: string;\r\n  metrics: Metric[];\r\n}\r\n\r\nexport interface KPICategory {\r\n  id: string;\r\n  name: string;\r\n  subcategories: Subcategory[];\r\n}\r\n\r\ninterface KPIState {\r\n  categories: KPICategory[];\r\n  isLoading: boolean;\r\n}\r\n\r\ntype KPIAction =\r\n  | { type: 'UPDATE_METRIC'; categoryId: string; subcategoryId: string; metricId: string; value: number }\r\n  | { type: 'LOAD_DATA'; data: KPICategory[] }\r\n  | { type: 'SET_LOADING'; loading: boolean };\r\n\r\nconst initialState: KPIState = {\r\n  categories: kpiData,\r\n  isLoading: false,\r\n};\r\n\r\nfunction kpiReducer(state: KPIState, action: KPIAction): KPIState {\r\n  switch (action.type) {\r\n    case 'UPDATE_METRIC': {\r\n      const { categoryId, subcategoryId, metricId, value } = action;\r\n      \r\n      const updatedCategories = state.categories.map(category => {\r\n        if (category.id !== categoryId) return category;\r\n        \r\n        return {\r\n          ...category,\r\n          subcategories: category.subcategories.map(subcategory => {\r\n            if (subcategory.id !== subcategoryId) return subcategory;\r\n            \r\n            return {\r\n              ...subcategory,\r\n              metrics: subcategory.metrics.map(metric => {\r\n                if (metric.id !== metricId) return metric;\r\n                return { ...metric, value };\r\n              })\r\n            };\r\n          })\r\n        };\r\n      });\r\n\r\n      // Apply relationship rules\r\n      const categoriesWithRelationships = applyRelationships(updatedCategories, categoryId, subcategoryId, metricId, value);\r\n      \r\n      return {\r\n        ...state,\r\n        categories: categoriesWithRelationships,\r\n      };\r\n    }\r\n    \r\n    case 'LOAD_DATA':\r\n      return {\r\n        ...state,\r\n        categories: action.data,\r\n      };\r\n      \r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        isLoading: action.loading,\r\n      };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ninterface KPIContextType {\r\n  state: KPIState;\r\n  dispatch: React.Dispatch<KPIAction>;\r\n  updateMetric: (categoryId: string, subcategoryId: string, metricId: string, value: number) => void;\r\n  exportData: () => string;\r\n  importData: (data: string) => void;\r\n}\r\n\r\nconst KPIContext = createContext<KPIContextType | undefined>(undefined);\r\n\r\nexport function KPIContextProvider({ children }: { children: ReactNode }) {\r\n  const [state, dispatch] = useReducer(kpiReducer, initialState);\r\n\r\n  const updateMetric = (categoryId: string, subcategoryId: string, metricId: string, value: number) => {\r\n    dispatch({\r\n      type: 'UPDATE_METRIC',\r\n      categoryId,\r\n      subcategoryId,\r\n      metricId,\r\n      value,\r\n    });\r\n  };\r\n\r\n  const exportData = (): string => {\r\n    return JSON.stringify(state.categories, null, 2);\r\n  };\r\n\r\n  const importData = (data: string) => {\r\n    try {\r\n      const parsedData = JSON.parse(data);\r\n      dispatch({ type: 'LOAD_DATA', data: parsedData });\r\n    } catch (error) {\r\n      console.error('Failed to import data:', error);\r\n    }\r\n  };\r\n\r\n  const value: KPIContextType = {\r\n    state,\r\n    dispatch,\r\n    updateMetric,\r\n    exportData,\r\n    importData,\r\n  };\r\n\r\n  return (\r\n    <KPIContext.Provider value={value}>\r\n      {children}\r\n    </KPIContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useKPI() {\r\n  const context = useContext(KPIContext);\r\n  if (context === undefined) {\r\n    throw new Error('useKPI must be used within a KPIContextProvider');\r\n  }\r\n  return context;\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}